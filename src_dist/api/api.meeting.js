let{MeetingDataModel,MeetingExhibitionModel}=require("../model/meeting"),UserModel=require("../model/user").UserModel,ResponseModel=require("../model/response").ResponseModel,dateParser=require("../util/dateParse").dateParser;async function GetPromiseInfo(e){try{var t={members:e},[i,n]=await Promise.all([MeetingDataModel.countDocuments(t).exec(),MeetingDataModel.find(t).sort({createDate:-1})]),o=(await Promise.all(n.map(async e=>{var t=await UserModel.findOne({id:e.createUserId});if(t)return e.createUserImg=t.profileImg,e})),{total:i,promise:n});return o}catch(e){throw e}}async function GetMeeting({offset:e="0",limit:t="20",seq:i,keyword:n,meetingDate:o}){try{var a,r={},[s,l]=(i&&(r.seq=String(i)),o&&(r.date=o),n&&""!==n.trim()&&(a=n.trim(),r.$or=[{title:{$regex:a,$options:"i"}}]),await Promise.all([MeetingDataModel.countDocuments(r).exec(),MeetingDataModel.find(r).sort({createDate:-1}).skip(Number(e)*Number(t)).limit(Number(t))])),M={total:s,meeting:l};return new ResponseModel(200,M)}catch(e){throw console.log("err",e),new ResponseModel(500,e,"GetMeeting api 알수 없는 에러")}}async function PromiseMeeting(e){try{var t=await GetPromiseInfo(e);return new ResponseModel(200,t)}catch(e){throw new ResponseModel(500,e,"PromiseMeeting api 알수 없는 에러")}}async function GetMeetingDetail(e){try{var t=await MeetingDataModel.findOne({_id:e});if(!t)return new ResponseModel(403,null,"모임 정보가 없음");var i=t.members,r=[];for(let e=0;e<i.length;e++){var n=i[e],s=await UserModel.findOne({id:n});if(s){let{id:e,nickName:t,area:i,gender:n,profileImg:o,_id:a}=s;r.push({id:e,nickName:t,area:i,gender:n,profileImg:o,key:a.toString()})}}return new ResponseModel(200,{meetingInfo:t,membersInfo:r})}catch(e){throw new ResponseModel(500,e,"GetMeetingDetail api 알수 없는 에러")}}async function GetMeetingExhibition(e,t){try{var[i,n]=await Promise.all([MeetingExhibitionModel.countDocuments().exec(),MeetingExhibitionModel.find().sort({exhibitionTitle:1}).skip(e*t).limit(t)]);return new ResponseModel(200,{total:i,meetingExhibition:n})}catch(e){throw new ResponseModel(500,e,"GetMeetingExhibition api 알수 없는 에러")}}async function GetMeetingExhibitionTargetList(e,t,i){try{var[n,o]=await Promise.all([MeetingDataModel.countDocuments({seq:e}).exec(),MeetingDataModel.find({seq:e}).sort({createDate:-1}).skip(t*i).limit(i)]);return new ResponseModel(200,{total:n,meetingTargetList:o})}catch(e){throw new ResponseModel(500,e,"GetMeetingExhibitionTargetList api 알수 없는 에러")}}async function GetTargetMeetingExhibition(e){try{var t=await MeetingExhibitionModel.findOne({seq:e});return t?new ResponseModel(200,t):new ResponseModel(403,null,"해당 전시는 모임이 등록되지 않은 전시 입니다.")}catch(e){throw new ResponseModel(500,e,"GetTargetMeetingExhibition api 알수 없는 에러")}}async function SetMeetingExhibition(e){try{var{seq:t,exhibitionTitle:i,exhibitionImg:n,exhibitionStartDate:o,exhibitionEndDate:a,exhibitionArea:r,exhibitionPlace:s,exhibitionPrice:l,exhibitionType:M}=e;return await MeetingExhibitionModel.findOne({seq:e.seq})||await new MeetingExhibitionModel({seq:t,exhibitionTitle:i,exhibitionImg:n,exhibitionStartDate:o,exhibitionEndDate:a,exhibitionArea:r,exhibitionPlace:s,exhibitionPrice:l,exhibitionType:M}).save(),new ResponseModel(200)}catch(e){return new ResponseModel(500,e,"SetMeetingExhibition api 알수 없는 에러")}}async function AddMeeting(e,t){try{var i=await UserModel.findOne({id:e}),n=(await new MeetingDataModel({members:[e],createUserId:e,createUserImg:i.profileImg,createUserNickName:i.nickName,createUserKey:i._id,createDate:dateParser((new Date).toString()),...t}).save(),await SetMeetingExhibition(t),await GetPromiseInfo(e));return new ResponseModel(200,n)}catch(e){throw new ResponseModel(500,e,"AddMeeting api 알수 없는 에러")}}async function DeleteMeeting(t,e,i){try{return e?MeetingDataModel({_id:e}).deleteOne({_id:e}).then(async()=>{await MeetingDataModel.countDocuments({seq:i}).exec()<=0&&await MeetingExhibitionModel.deleteOne({seq:i});var e=await GetPromiseInfo(t);return new ResponseModel(200,e)}).catch(e=>{throw new ResponseModel(500,e,"DeleteMeeting api 삭제 실패")}):ResponseModel(403,seqArr,"_id null")}catch(e){throw new ResponseModel(500,e,"DeleteMeeting api 알수 없는 에러")}}async function AttendMeeting(e,t){try{var i=await MeetingDataModel.findOne({_id:t});if(!i)return ResponseModel(403,null,t+" : 조회되지않은 모임 또는 삭제된 모임 입니다.");if(i.membersTotal===i.members.length)return ResponseModel(403,null,"정원 초과");i.members.push(e),await i.save();var n=await GetPromiseInfo(e);return new ResponseModel(200,n)}catch(e){throw new ResponseModel(500,e,"AttendMeeting api 알수 없는 에러")}}async function CancelMeeting(t,e){try{var i,n,o=await MeetingDataModel.findOne({_id:e});return o?(i=o.members.findIndex(e=>e===t),o.members.splice(i,1),await o.save(),n=await GetPromiseInfo(t),new ResponseModel(200,n)):ResponseModel(403,null,e+" : 조회되지않은 모임 또는 삭제된 모임 입니다.")}catch(e){throw new ResponseModel(500,e,"CancelMeeting api 알수 없는 에러")}}async function UpdateMeeting(e,t){try{await MeetingDataModel.updateOne({_id:t._id},{$set:t});var i=await GetPromiseInfo(e);return new ResponseModel(200,i)}catch(e){throw new ResponseModel(500,e,"UpdateMeeting api 알수 없는 에러")}}module.exports={GetMeeting:GetMeeting,PromiseMeeting:PromiseMeeting,GetMeetingDetail:GetMeetingDetail,AddMeeting:AddMeeting,DeleteMeeting:DeleteMeeting,AttendMeeting:AttendMeeting,CancelMeeting:CancelMeeting,UpdateMeeting:UpdateMeeting,GetMeetingExhibition:GetMeetingExhibition,GetMeetingExhibitionTargetList:GetMeetingExhibitionTargetList,GetTargetMeetingExhibition:GetTargetMeetingExhibition};// build date : 2025. 5. 21. 오후 7:06:44