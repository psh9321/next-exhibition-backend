let ResponseModel=require("../model/response").ResponseModel,UserModel=require("../model/user").UserModel,{ChattingRoomModel,ChattingModel}=require("../model/Chatting"),dateParser=require("../util/dateParse").dateParser;async function GetAnotherUser(e){try{var a,s=await UserModel.findOne({_id:e});return s?(a={area:s.area,nickName:s.nickName??s.name,profileImg:s.profileImg,id:s.id},new ResponseModel(200,a)):new ResponseModel(403,null,"유저 정보가 없습니다.")}catch(e){return new ResponseModel(500,e,"GetAnotherUser api 에러")}}async function GetTargetRoomInfo(e,a){try{var s,t=[e,a],n={};for(s of t){var o=await UserModel.findOne({_id:s});n[o._id]={id:o.id,profileImg:o.profileImg,nickName:o.nickName}}return{roomInfo:await ChattingRoomModel.findOne({ids:{$all:t}}),users:n,unReadMessage:await ChattingModel.countDocuments({ids:{$all:t},isRead:{$nin:[e]}})}}catch(e){console.log("ee",e)}}async function GetMessageRoom(e){try{var s=await UserModel.findOne({id:e});if(!s)return new ResponseModel(403,null,"유저 정보가 없습니다.");let a=s._id.toString();var t=await ChattingRoomModel.find({ids:{$in:[a]}});if(t.length<=0)return new ResponseModel(200,[]);var n=[];for(let e=0;e<t.length;e++){var o=t[e].ids.find(e=>e!==a),d=await GetTargetRoomInfo(a,o);n.push(d)}return new ResponseModel(200,n)}catch(e){throw console.log("eee",e),new ResponseModel(500,e.message,"GetMessageRoom api 알수 없는 에러")}}async function SetMessageRoom(e){try{var a,s,t=await ChattingRoomModel.findOne({ids:{$all:[e.senderId,e.reciverId]}});return t?(a={message:e.message,sendDate:dateParser(new Date),isRead:[e.senderId],sender:e.senderId},t.lastMessage=a,await t.save(),await ChattingRoomModel.findOne({ids:{$all:[e.senderId,e.reciverId]}})):(await(s=new ChattingRoomModel({ids:[e.senderId,e.reciverId],lastMessage:{message:e.message,sendDate:dateParser(new Date),isRead:[e.senderId],sender:e.senderId}})).save(),s)}catch(e){throw new ResponseModel(500,e,"SetMessageRoom api 에러")}}async function AddMessageItem(e,a){try{var s=[e.senderId,e.reciverId],t=dateParser(new Date),n=new ChattingModel({isRead:[e.senderId],ids:s,sendDate:t,sender:e.senderId,roomKey:a,...e});return n.save(),n}catch(e){throw new ResponseModel(500,e,"AddMessageItem api 에러")}}async function GetMessagesRoomData(e,a,s=0,t=20){try{var n,o,d,r,i,l=await UserModel.findOne({id:e});return l?(o={ids:{$all:n=[l._id.toString(),a],$size:n.length}},[d,r]=await Promise.all([ChattingModel.countDocuments(o).exec(),ChattingModel.find(o).sort({sendDate:-1}).skip(s*t).limit(t)]),i={total:d,limit:t,page:s,message:r.reverse()},new ResponseModel(200,i)):new ResponseModel(403,null,"유저 정보가 없습니다.")}catch(e){throw new ResponseModel(500,e,"GetMessagesRoomData api 에러")}}async function SetReadMessage(e,a){try{var s,t,n=await UserModel.findOne({_id:e}),o=await UserModel.findOne({_id:a});return n&&o?(s=[e,a],t=(await ChattingModel.find({ids:{$all:s},sender:a})).map(e=>e._id),await ChattingModel.updateMany({_id:{$in:t}},{$addToSet:{isRead:e}}),await GetMessageRoom(n.id)):new ResponseModel(403,null,`senderUserInfo : ${!!o}, readerUserInfo : ${!!n} 조회 되지 않은 유저정보`)}catch(e){throw new ResponseModel(500,e,"GetMessagesRoomData api 에러")}}module.exports={GetAnotherUser:GetAnotherUser,GetMessageRoom:GetMessageRoom,SetMessageRoom:SetMessageRoom,AddMessageItem:AddMessageItem,GetMessagesRoomData:GetMessagesRoomData,SetReadMessage:SetReadMessage,GetTargetRoomInfo:GetTargetRoomInfo};// build date : 2025. 5. 21. 오후 7:06:44