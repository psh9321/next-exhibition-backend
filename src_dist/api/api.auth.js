let jwt=require("jsonwebtoken"),UserModel=require("../model/user").UserModel,ResponseModel=require("../model/response").ResponseModel,dataEncrypt=require("../util/crpyto").dataEncrypt,setToken=require("../util/token").setToken;async function Token(n){try{let{a:e,r:o}=n;return jwt.verify(e,process.env.ACCESS_KEY,async(e,n)=>e?jwt.verify(o,process.env.REFRESH_KEY,async(e,n)=>e?new ResponseModel(403,null,"토큰 만료"):(e=n.id,await UserModel.findOne({id:e})?(e=JSON.stringify({a:setToken(n.id),r:o}),new ResponseModel(200,dataEncrypt(e),"")):new ResponseModel(403,null,"유저 정보가 조회 되지않는 토큰"))):(e=n.id,await UserModel.findOne({id:e})?new ResponseModel(200,null,""):new ResponseModel(403,null,"유저 정보가 조회 되지않는 토큰")))}catch(e){throw new ResponseModel(500,e.message,"token verify api 알수 없는 에러")}}async function ClientKey(e){try{return await UserModel.findOne({id:e})?new ResponseModel(200):new ResponseModel(403,null,"유효 하지않은 클라이언트 키")}catch(e){}}module.exports={Token:Token,ClientKey:ClientKey};// build date : 2025. 5. 21. 오후 7:06:44