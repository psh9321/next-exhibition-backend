let AuthToken=require("../middleware/middleware.auth").AuthToken,{GetMeeting,PromiseMeeting,GetMeetingDetail,AddMeeting,DeleteMeeting,AttendMeeting,CancelMeeting,UpdateMeeting,GetMeetingExhibition,GetMeetingExhibitionTargetList,GetTargetMeetingExhibition}=require("../api/api.meeting"),router=require("express").Router();router.get(`/${process.env.API_URL_METHOD}/meeting`,async(e,t)=>{try{var s=e.query,a=await GetMeeting(s);t.status(200).send(a)}catch(e){t.status(500).send(e)}}),router.get(`/${process.env.API_URL_METHOD}/meeting/promise`,AuthToken,async(e,t)=>{try{var s=e.id,a=await PromiseMeeting(s);t.status(200).send(a)}catch(e){t.status(500).send(e)}}),router.get(`/${process.env.API_URL_METHOD}/meeting/detail/:_id`,async(e,t)=>{try{var s=e.params._id,a=await GetMeetingDetail(s);t.status(200).send(a)}catch(e){t.status(500).send(e)}}),router.post(`/${process.env.API_URL_METHOD}/meeting`,AuthToken,async(e,t)=>{try{var{id:s,body:a}=e,i=await AddMeeting(s,a);t.status(200).send(i)}catch(e){t.status(500).send(e)}}),router.delete(`/${process.env.API_URL_METHOD}/meeting/:_id/:seq`,AuthToken,async(e,t)=>{try{var s=e.id,{_id:a,seq:i}=e.params,n=await DeleteMeeting(s,a,i);t.status(200).send(n)}catch(e){t.status(500).send(e)}}),router.patch(`/${process.env.API_URL_METHOD}/meeting/attend/:_id`,AuthToken,async(e,t)=>{try{var s=e.id,a=e.params._id,i=await AttendMeeting(s,a);t.status(200).send(i)}catch(e){t.status(500).send(e)}}),router.patch(`/${process.env.API_URL_METHOD}/meeting/cancel/:_id`,AuthToken,async(e,t)=>{try{var s=e.id,a=e.params._id,i=await CancelMeeting(s,a);t.status(200).send(i)}catch(e){t.status(500).send(e)}}),router.patch(`/${process.env.API_URL_METHOD}/meeting`,AuthToken,async(e,t)=>{try{var{id:s,body:a}=e,i=await UpdateMeeting(s,a);t.status(200).send(i)}catch(e){t.status(500).send(e)}}),router.get(`/${process.env.API_URL_METHOD}/meeting/exhibition`,async(e,t)=>{try{var{offset:s,limit:a}=e.query,i=await GetMeetingExhibition(Number(s??0),Number(a??20));t.status(200).send(i)}catch(e){t.status(500).send(e)}}),router.get(`/${process.env.API_URL_METHOD}/meeting/exhibition/:_req`,async(e,t)=>{try{var{offset:s,limit:a}=e.query,i=e.params._req,n=await GetMeetingExhibitionTargetList(i,Number(s??0),Number(a??0));t.status(200).send(n)}catch(e){t.status(500).send(e)}}),router.get(`/${process.env.API_URL_METHOD}/meeting/exhibition/target/:_req`,async(e,t)=>{try{var s=e.params._req,a=await GetTargetMeetingExhibition(s);t.status(200).send(a)}catch(e){t.status(500).send(e)}}),module.exports=router;// build date : 2025. 5. 21. 오후 7:06:44